

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 11:56:17 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 18/08/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _RCREG	set	4014
    62   000000                     _TXREG	set	4013
    63   000000                     _PIE1bits	set	3997
    64   000000                     _SPBRG	set	4015
    65   000000                     _BAUDCONbits	set	4024
    66   000000                     _TRISBbits	set	3987
    67   000000                     _PIR1bits	set	3998
    68   000000                     _CCP1CON	set	4029
    69   000000                     _ADCON0bits	set	4034
    70   000000                     _ADRESL	set	4035
    71   000000                     _ADRESH	set	4036
    72   000000                     _ADCON1	set	4033
    73   000000                     _ADFM	set	32263
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ADCON2bits	set	4032
    76   000000                     _TXIF	set	31988
    77   000000                     _CREN	set	32092
    78   000000                     _RCIF	set	31989
    79   000000                     _IRCF0	set	32412
    80   000000                     _IRCF1	set	32413
    81   000000                     _GIE	set	32663
    82   000000                     _INT0IE	set	32660
    83   000000                     _LATC	set	3979
    84   000000                     _TRISC	set	3988
    85   000000                     _INTCON2bits	set	4081
    86   000000                     _TRISA	set	3986
    87   000000                     _RCONbits	set	4048
    88   000000                     _RCSTAbits	set	4011
    89   000000                     _TXSTAbits	set	4012
    90   000000                     _IPR1bits	set	3999
    91   000000                     _IRCF2	set	32414
    92   000000                     _INT0IF	set	32657
    93                           
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   000806                     __pcinit:
    98                           	callstack 0
    99   000806                     start_initialization:
   100                           	callstack 0
   101   000806                     __initialization:
   102                           	callstack 0
   103                           
   104                           ; Clear objects allocated to COMRAM (44 bytes)
   105   000806  EE00  F001         	lfsr	0,__pbssCOMRAM
   106   00080A  0E2C               	movlw	44
   107   00080C                     clear_0:
   108   00080C  6AEE               	clrf	postinc0,c
   109   00080E  06E8               	decf	wreg,f,c
   110   000810  E1FD               	bnz	clear_0
   111   000812                     end_of_initialization:
   112                           	callstack 0
   113   000812                     __end_of__initialization:
   114                           	callstack 0
   115   000812  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116   000814  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117   000816  0100               	movlb	0
   118   000818  EFF7  F003         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	bssCOMRAM
   121   000001                     __pbssCOMRAM:
   122                           	callstack 0
   123   000001                     _str:
   124                           	callstack 0
   125   000001                     	ds	20
   126   000015                     _first_press:
   127                           	callstack 0
   128   000015                     	ds	2
   129   000017                     _lenStr:
   130                           	callstack 0
   131   000017                     	ds	2
   132   000019                     _mystring:
   133                           	callstack 0
   134   000019                     	ds	20
   135                           
   136                           	psect	cstackCOMRAM
   137   00002D                     __pcstackCOMRAM:
   138                           	callstack 0
   139   00002D                     ?___awmod:
   140                           	callstack 0
   141   00002D                     UART_Write@data:
   142                           	callstack 0
   143   00002D                     ___awmod@dividend:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147   00002D                     	ds	1
   148   00002E                     
   149                           ; 1 bytes @ 0x1
   150   00002E                     	ds	1
   151   00002F                     ___awmod@divisor:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x2
   155   00002F                     	ds	2
   156   000031                     ___awmod@counter:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x4
   160   000031                     	ds	1
   161   000032                     ___awmod@sign:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x5
   165   000032                     	ds	1
   166   000033                     ??_H_ISR:
   167                           
   168                           ; 1 bytes @ 0x6
   169   000033                     	ds	2
   170   000035                     
   171                           ; 1 bytes @ 0x8
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 15 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   191 ;;      Params:         0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called: 5
   197 ;; This function calls:
   198 ;;		_SYSTEM_Initialize
   199 ;; This function is called by:
   200 ;;		Startup code after reset
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           
   204                           	psect	text0
   205   0007EE                     __ptext0:
   206                           	callstack 0
   207   0007EE                     _main:
   208                           	callstack 26
   209   0007EE                     
   210                           ;main.c: 17:     TRISC = 0;
   211   0007EE  0E00               	movlw	0
   212   0007F0  6E94               	movwf	148,c	;volatile
   213                           
   214                           ;main.c: 18:     LATC = 0;
   215   0007F2  0E00               	movlw	0
   216   0007F4  6E8B               	movwf	139,c	;volatile
   217                           
   218                           ;main.c: 19:     ADCON1 = 15;
   219   0007F6  0E0F               	movlw	15
   220   0007F8  6EC1               	movwf	193,c	;volatile
   221   0007FA                     
   222                           ;main.c: 20:     SYSTEM_Initialize() ;
   223   0007FA  EC0E  F004         	call	_SYSTEM_Initialize	;wreg free
   224   0007FE                     l21:
   225   0007FE  EFFF  F003         	goto	l21
   226   000802  EF07  F000         	goto	start
   227   000806                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _SYSTEM_Initialize *****************
   231 ;; Defined at:
   232 ;;		line 60 in file "setting_hardaware/setting.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   246 ;;      Params:         0       0       0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; Hardware stack levels required when called: 4
   253 ;; This function calls:
   254 ;;		_ADC_Initialize
   255 ;;		_CCP1_Initialize
   256 ;;		_INTERRUPT_Initialize
   257 ;;		_OSCILLATOR_Initialize
   258 ;;		_UART_Initialize
   259 ;; This function is called by:
   260 ;;		_main
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text1
   265   00081C                     __ptext1:
   266                           	callstack 0
   267   00081C                     _SYSTEM_Initialize:
   268                           	callstack 26
   269   00081C                     
   270                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   271   00081C  EC3C  F004         	call	_OSCILLATOR_Initialize	;wreg free
   272                           
   273                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   274   000820  EC2F  F004         	call	_INTERRUPT_Initialize	;wreg free
   275   000824                     
   276                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   277   000824  ECE8  F003         	call	_UART_Initialize	;wreg free
   278   000828                     
   279                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   280   000828  EC36  F004         	call	_CCP1_Initialize	;wreg free
   281   00082C                     
   282                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   283   00082C  EC19  F004         	call	_ADC_Initialize	;wreg free
   284   000830  0012               	return		;funcret
   285   000832                     __end_of_SYSTEM_Initialize:
   286                           	callstack 0
   287                           
   288 ;; *************** function _UART_Initialize *****************
   289 ;; Defined at:
   290 ;;		line 7 in file "setting_hardaware/uart.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   304 ;;      Params:         0       0       0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; Hardware stack levels required when called: 3
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_SYSTEM_Initialize
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text2
   319   0007D0                     __ptext2:
   320                           	callstack 0
   321   0007D0                     _UART_Initialize:
   322                           	callstack 26
   323   0007D0                     
   324                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   325   0007D0  8C94               	bsf	148,6,c	;volatile
   326                           
   327                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   328   0007D2  8E94               	bsf	148,7,c	;volatile
   329                           
   330                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
   331   0007D4  98AC               	bcf	172,4,c	;volatile
   332                           
   333                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
   334   0007D6  94AC               	bcf	172,2,c	;volatile
   335                           
   336                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
   337   0007D8  96B8               	bcf	184,3,c	;volatile
   338   0007DA                     
   339                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
   340   0007DA  0E33               	movlw	51
   341   0007DC  6EAF               	movwf	175,c	;volatile
   342   0007DE                     
   343                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
   344   0007DE  8EAB               	bsf	171,7,c	;volatile
   345   0007E0                     
   346                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
   347   0007E0  889E               	bsf	158,4,c	;volatile
   348   0007E2                     
   349                           ;setting_hardaware/uart.c: 30:     PIE1bits.TXIE = 1;
   350   0007E2  889D               	bsf	157,4,c	;volatile
   351   0007E4                     
   352                           ;setting_hardaware/uart.c: 31:     PIR1bits.RCIF = 0;
   353   0007E4  9A9E               	bcf	158,5,c	;volatile
   354   0007E6                     
   355                           ;setting_hardaware/uart.c: 32:     PIE1bits.RCIE = 1;
   356   0007E6  8A9D               	bsf	157,5,c	;volatile
   357   0007E8                     
   358                           ;setting_hardaware/uart.c: 33:     TXSTAbits.TXEN = 1;
   359   0007E8  8AAC               	bsf	172,5,c	;volatile
   360   0007EA                     
   361                           ;setting_hardaware/uart.c: 34:     RCSTAbits.CREN = 1;
   362   0007EA  88AB               	bsf	171,4,c	;volatile
   363   0007EC  0012               	return		;funcret
   364   0007EE                     __end_of_UART_Initialize:
   365                           	callstack 0
   366                           
   367 ;; *************** function _OSCILLATOR_Initialize *****************
   368 ;; Defined at:
   369 ;;		line 73 in file "setting_hardaware/setting.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		None
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   383 ;;      Params:         0       0       0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; Hardware stack levels required when called: 3
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_SYSTEM_Initialize
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text3
   398   000878                     __ptext3:
   399                           	callstack 0
   400   000878                     _OSCILLATOR_Initialize:
   401                           	callstack 26
   402   000878                     
   403                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   404   000878  8CD3               	bsf	4051,6,c	;volatile
   405                           
   406                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   407   00087A  8AD3               	bsf	4051,5,c	;volatile
   408                           
   409                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   410   00087C  98D3               	bcf	4051,4,c	;volatile
   411   00087E  0012               	return		;funcret
   412   000880                     __end_of_OSCILLATOR_Initialize:
   413                           	callstack 0
   414                           
   415 ;; *************** function _INTERRUPT_Initialize *****************
   416 ;; Defined at:
   417 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		None
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   431 ;;      Params:         0       0       0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0
   434 ;;      Totals:         0       0       0       0       0       0       0
   435 ;;Total ram usage:        0 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; Hardware stack levels required when called: 3
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_SYSTEM_Initialize
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text4
   446   00085E                     __ptext4:
   447                           	callstack 0
   448   00085E                     _INTERRUPT_Initialize:
   449                           	callstack 26
   450   00085E                     
   451                           ;setting_hardaware/interrupt_manager.c: 5:     TRISBbits.RB0 = 1;
   452   00085E  8093               	bsf	147,0,c	;volatile
   453                           
   454                           ;setting_hardaware/interrupt_manager.c: 6:     RCONbits.IPEN = 1;
   455   000860  8ED0               	bsf	208,7,c	;volatile
   456                           
   457                           ;setting_hardaware/interrupt_manager.c: 9:     INTCON2bits.INTEDG0 = 1;
   458   000862  8CF1               	bsf	241,6,c	;volatile
   459                           
   460                           ;setting_hardaware/interrupt_manager.c: 10:     INT0IF = 0;
   461   000864  92F2               	bcf	4082,1,c	;volatile
   462                           
   463                           ;setting_hardaware/interrupt_manager.c: 11:     INT0IE = 1;
   464   000866  88F2               	bsf	4082,4,c	;volatile
   465                           
   466                           ;setting_hardaware/interrupt_manager.c: 12:     GIE = 1;
   467   000868  8EF2               	bsf	4082,7,c	;volatile
   468   00086A  0012               	return		;funcret
   469   00086C                     __end_of_INTERRUPT_Initialize:
   470                           	callstack 0
   471                           
   472 ;; *************** function _CCP1_Initialize *****************
   473 ;; Defined at:
   474 ;;		line 3 in file "setting_hardaware/ccp1.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; Hardware stack levels required when called: 3
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_SYSTEM_Initialize
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text5
   503   00086C                     __ptext5:
   504                           	callstack 0
   505   00086C                     _CCP1_Initialize:
   506                           	callstack 26
   507   00086C                     
   508                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
   509   00086C  9494               	bcf	148,2,c	;volatile
   510   00086E                     
   511                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   512   00086E  0E09               	movlw	9
   513   000870  6EBD               	movwf	189,c	;volatile
   514   000872                     
   515                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
   516   000872  949E               	bcf	158,2,c	;volatile
   517   000874                     
   518                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
   519   000874  849F               	bsf	159,2,c	;volatile
   520   000876  0012               	return		;funcret
   521   000878                     __end_of_CCP1_Initialize:
   522                           	callstack 0
   523                           
   524 ;; *************** function _ADC_Initialize *****************
   525 ;; Defined at:
   526 ;;		line 3 in file "setting_hardaware/adc.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   540 ;;      Params:         0       0       0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 3
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_SYSTEM_Initialize
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text6
   555   000832                     __ptext6:
   556                           	callstack 0
   557   000832                     _ADC_Initialize:
   558                           	callstack 26
   559   000832                     
   560                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   561   000832  6892               	setf	146,c	;volatile
   562   000834                     
   563                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   564   000834  0E0E               	movlw	14
   565   000836  6EC1               	movwf	193,c	;volatile
   566   000838                     
   567                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   568   000838  8EC0               	bsf	4032,7,c	;volatile
   569                           
   570                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   571   00083A  0E07               	movlw	7
   572   00083C  12C0               	iorwf	192,f,c	;volatile
   573                           
   574                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   575   00083E  0E00               	movlw	0
   576   000840  6EC4               	movwf	196,c	;volatile
   577                           
   578                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   579   000842  0E00               	movlw	0
   580   000844  6EC3               	movwf	195,c	;volatile
   581   000846  0012               	return		;funcret
   582   000848                     __end_of_ADC_Initialize:
   583                           	callstack 0
   584                           
   585 ;; *************** function _H_ISR *****************
   586 ;; Defined at:
   587 ;;		line 78 in file "setting_hardaware/uart.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0       0       0
   604 ;;      Totals:         2       0       0       0       0       0       0
   605 ;;Total ram usage:        2 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 2
   608 ;; This function calls:
   609 ;;		_MyusartRead
   610 ;;		_UART_Write
   611 ;;		___awmod
   612 ;; This function is called by:
   613 ;;		Interrupt level 2
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	intcode
   618   000008                     __pintcode:
   619                           	callstack 0
   620   000008                     _H_ISR:
   621                           	callstack 26
   622                           
   623                           ;incstack = 0
   624   000008  8235               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   625   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   626                           
   627                           	psect	intcode_body
   628   000602                     __pintcode_body:
   629                           	callstack 26
   630   000602                     int_func:
   631                           	callstack 26
   632   000602  0006               	pop		; remove dummy address from shadow register refresh
   633   000604                     
   634                           ;setting_hardaware/uart.c: 80:     if(RCIF)
   635   000604  AA9E               	btfss	3998,5,c	;volatile
   636   000606  EF07  F003         	goto	i2u29_41
   637   00060A  EF09  F003         	goto	i2u29_40
   638   00060E                     i2u29_41:
   639   00060E  EF15  F003         	goto	i2l1062
   640   000612                     i2u29_40:
   641   000612                     
   642                           ;setting_hardaware/uart.c: 81:     {;setting_hardaware/uart.c: 82:         if(RCSTAbits.
      +                          OERR)
   643   000612  A2AB               	btfss	171,1,c	;volatile
   644   000614  EF0E  F003         	goto	i2u30_41
   645   000618  EF10  F003         	goto	i2u30_40
   646   00061C                     i2u30_41:
   647   00061C  EF13  F003         	goto	i2l1060
   648   000620                     i2u30_40:
   649   000620                     
   650                           ;setting_hardaware/uart.c: 83:         {;setting_hardaware/uart.c: 84:             CREN 
      +                          = 0;
   651   000620  98AB               	bcf	4011,4,c	;volatile
   652                           
   653                           ;setting_hardaware/uart.c: 85:             __nop();
   654   000622  0000               	nop	
   655                           
   656                           ;setting_hardaware/uart.c: 86:             CREN = 1;
   657   000624  88AB               	bsf	4011,4,c	;volatile
   658   000626                     i2l1060:
   659                           
   660                           ;setting_hardaware/uart.c: 88:         MyusartRead();
   661   000626  ECCA  F003         	call	_MyusartRead	;wreg free
   662   00062A                     i2l1062:
   663                           
   664                           ;setting_hardaware/uart.c: 90:     if(TXIF&first_press){
   665   00062A  B89E               	btfsc	3998,4,c	;volatile
   666   00062C  EF1A  F003         	goto	i2u31_41
   667   000630  EF1D  F003         	goto	i2u31_40
   668   000634                     i2u31_41:
   669   000634  0E01               	movlw	1
   670   000636  EF1E  F003         	goto	i2u32_40
   671   00063A                     i2u31_40:
   672   00063A  0E00               	movlw	0
   673   00063C                     i2u32_40:
   674   00063C  1415               	andwf	_first_press^0,w,c
   675   00063E  6E33               	movwf	??_H_ISR^0,c
   676   000640  0E00               	movlw	0
   677   000642  1416               	andwf	(_first_press+1)^0,w,c
   678   000644  6E34               	movwf	(??_H_ISR+1)^0,c
   679   000646  5033               	movf	??_H_ISR^0,w,c
   680   000648  1034               	iorwf	(??_H_ISR+1)^0,w,c
   681   00064A  B4D8               	btfsc	status,2,c
   682   00064C  EF2A  F003         	goto	i2u33_41
   683   000650  EF2C  F003         	goto	i2u33_40
   684   000654                     i2u33_41:
   685   000654  EF4C  F003         	goto	i2l1070
   686   000658                     i2u33_40:
   687   000658                     
   688                           ;setting_hardaware/uart.c: 91:         UART_Write((char)('0'+(int)(LATC>=10)));
   689   000658  0E0A               	movlw	10
   690   00065A  608B               	cpfslt	139,c	;volatile
   691   00065C  EF32  F003         	goto	i2u34_41
   692   000660  EF35  F003         	goto	i2u34_40
   693   000664                     i2u34_41:
   694   000664  0E01               	movlw	1
   695   000666  EF36  F003         	goto	i2u35_40
   696   00066A                     i2u34_40:
   697   00066A  0E00               	movlw	0
   698   00066C                     i2u35_40:
   699   00066C  0F30               	addlw	48
   700   00066E  EC24  F004         	call	_UART_Write
   701                           
   702                           ;setting_hardaware/uart.c: 92:         UART_Write((char)('0'+LATC%10));
   703   000672  CF8B F02D          	movff	3979,___awmod@dividend	;volatile
   704   000676  6A2E               	clrf	(___awmod@dividend+1)^0,c
   705   000678  0E00               	movlw	0
   706   00067A  6E30               	movwf	(___awmod@divisor+1)^0,c
   707   00067C  0E0A               	movlw	10
   708   00067E  6E2F               	movwf	___awmod@divisor^0,c
   709   000680  EC72  F003         	call	___awmod	;wreg free
   710   000684  502D               	movf	?___awmod^0,w,c
   711   000686  0F30               	addlw	48
   712   000688  EC24  F004         	call	_UART_Write
   713   00068C                     
   714                           ;setting_hardaware/uart.c: 93:         UART_Write('\n');
   715   00068C  0E0A               	movlw	10
   716   00068E  EC24  F004         	call	_UART_Write
   717   000692                     
   718                           ;setting_hardaware/uart.c: 94:         UART_Write('\r');
   719   000692  0E0D               	movlw	13
   720   000694  EC24  F004         	call	_UART_Write
   721   000698                     i2l1070:
   722                           
   723                           ;setting_hardaware/uart.c: 96:     if(INT0IF&first_press){
   724   000698  B2F2               	btfsc	4082,1,c	;volatile
   725   00069A  EF51  F003         	goto	i2u36_41
   726   00069E  EF54  F003         	goto	i2u36_40
   727   0006A2                     i2u36_41:
   728   0006A2  0E01               	movlw	1
   729   0006A4  EF55  F003         	goto	i2u37_40
   730   0006A8                     i2u36_40:
   731   0006A8  0E00               	movlw	0
   732   0006AA                     i2u37_40:
   733   0006AA  1415               	andwf	_first_press^0,w,c
   734   0006AC  6E33               	movwf	??_H_ISR^0,c
   735   0006AE  0E00               	movlw	0
   736   0006B0  1416               	andwf	(_first_press+1)^0,w,c
   737   0006B2  6E34               	movwf	(??_H_ISR+1)^0,c
   738   0006B4  5033               	movf	??_H_ISR^0,w,c
   739   0006B6  1034               	iorwf	(??_H_ISR+1)^0,w,c
   740   0006B8  B4D8               	btfsc	status,2,c
   741   0006BA  EF61  F003         	goto	i2u38_41
   742   0006BE  EF63  F003         	goto	i2u38_40
   743   0006C2                     i2u38_41:
   744   0006C2  EF70  F003         	goto	i2l172
   745   0006C6                     i2u38_40:
   746   0006C6                     
   747                           ;setting_hardaware/uart.c: 97:         INT0IE = 0;
   748   0006C6  98F2               	bcf	4082,4,c	;volatile
   749   0006C8                     
   750                           ;setting_hardaware/uart.c: 98:         LATC = (LATC+1)%16;
   751   0006C8  288B               	incf	139,w,c	;volatile
   752   0006CA  0B0F               	andlw	15
   753   0006CC  6E8B               	movwf	139,c	;volatile
   754   0006CE                     
   755                           ;setting_hardaware/uart.c: 99:         _delay((unsigned long)((100)*(4000000/4000.0)));
   756   0006CE  0E82               	movlw	130
   757   0006D0  6E33               	movwf	??_H_ISR^0,c
   758   0006D2  0EDE               	movlw	222
   759   0006D4                     i2u39_47:
   760   0006D4  2EE8               	decfsz	wreg,f,c
   761   0006D6  D7FE               	bra	i2u39_47
   762   0006D8  2E33               	decfsz	??_H_ISR^0,f,c
   763   0006DA  D7FC               	bra	i2u39_47
   764   0006DC                     
   765                           ;setting_hardaware/uart.c: 100:         INT0IF = 0;
   766   0006DC  92F2               	bcf	4082,1,c	;volatile
   767   0006DE                     
   768                           ;setting_hardaware/uart.c: 101:         INT0IE = 1;
   769   0006DE  88F2               	bsf	4082,4,c	;volatile
   770   0006E0                     i2l172:
   771   0006E0  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   772   0006E2  0011               	retfie		f
   773   0006E4                     __end_of_H_ISR:
   774                           	callstack 0
   775                           
   776 ;; *************** function ___awmod *****************
   777 ;; Defined at:
   778 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  dividend        2    0[COMRAM] int 
   781 ;;  divisor         2    2[COMRAM] int 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  sign            1    5[COMRAM] unsigned char 
   784 ;;  counter         1    4[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  2    0[COMRAM] int 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         4       0       0       0       0       0       0
   795 ;;      Locals:         2       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0
   797 ;;      Totals:         6       0       0       0       0       0       0
   798 ;;Total ram usage:        6 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_H_ISR
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text8
   808   0006E4                     __ptext8:
   809                           	callstack 0
   810   0006E4                     ___awmod:
   811                           	callstack 27
   812   0006E4  0E00               	movlw	0
   813   0006E6  6E32               	movwf	___awmod@sign^0,c
   814   0006E8  BE2E               	btfsc	(___awmod@dividend+1)^0,7,c
   815   0006EA  EF7B  F003         	goto	i2u23_40
   816   0006EE  EF79  F003         	goto	i2u23_41
   817   0006F2                     i2u23_41:
   818   0006F2  EF81  F003         	goto	i2l1026
   819   0006F6                     i2u23_40:
   820   0006F6  6C2D               	negf	___awmod@dividend^0,c
   821   0006F8  1E2E               	comf	(___awmod@dividend+1)^0,f,c
   822   0006FA  B0D8               	btfsc	status,0,c
   823   0006FC  2A2E               	incf	(___awmod@dividend+1)^0,f,c
   824   0006FE  0E01               	movlw	1
   825   000700  6E32               	movwf	___awmod@sign^0,c
   826   000702                     i2l1026:
   827   000702  BE30               	btfsc	(___awmod@divisor+1)^0,7,c
   828   000704  EF88  F003         	goto	i2u24_40
   829   000708  EF86  F003         	goto	i2u24_41
   830   00070C                     i2u24_41:
   831   00070C  EF8C  F003         	goto	i2l1030
   832   000710                     i2u24_40:
   833   000710  6C2F               	negf	___awmod@divisor^0,c
   834   000712  1E30               	comf	(___awmod@divisor+1)^0,f,c
   835   000714  B0D8               	btfsc	status,0,c
   836   000716  2A30               	incf	(___awmod@divisor+1)^0,f,c
   837   000718                     i2l1030:
   838   000718  502F               	movf	___awmod@divisor^0,w,c
   839   00071A  1030               	iorwf	(___awmod@divisor+1)^0,w,c
   840   00071C  B4D8               	btfsc	status,2,c
   841   00071E  EF93  F003         	goto	i2u25_41
   842   000722  EF95  F003         	goto	i2u25_40
   843   000726                     i2u25_41:
   844   000726  EFB9  F003         	goto	i2l1046
   845   00072A                     i2u25_40:
   846   00072A  0E01               	movlw	1
   847   00072C  6E31               	movwf	___awmod@counter^0,c
   848   00072E  EF9D  F003         	goto	i2l1036
   849   000732                     i2l1034:
   850   000732  90D8               	bcf	status,0,c
   851   000734  362F               	rlcf	___awmod@divisor^0,f,c
   852   000736  3630               	rlcf	(___awmod@divisor+1)^0,f,c
   853   000738  2A31               	incf	___awmod@counter^0,f,c
   854   00073A                     i2l1036:
   855   00073A  AE30               	btfss	(___awmod@divisor+1)^0,7,c
   856   00073C  EFA2  F003         	goto	i2u26_41
   857   000740  EFA4  F003         	goto	i2u26_40
   858   000744                     i2u26_41:
   859   000744  EF99  F003         	goto	i2l1034
   860   000748                     i2u26_40:
   861   000748                     i2l1038:
   862   000748  502F               	movf	___awmod@divisor^0,w,c
   863   00074A  5C2D               	subwf	___awmod@dividend^0,w,c
   864   00074C  5030               	movf	(___awmod@divisor+1)^0,w,c
   865   00074E  582E               	subwfb	(___awmod@dividend+1)^0,w,c
   866   000750  A0D8               	btfss	status,0,c
   867   000752  EFAD  F003         	goto	i2u27_41
   868   000756  EFAF  F003         	goto	i2u27_40
   869   00075A                     i2u27_41:
   870   00075A  EFB3  F003         	goto	i2l1042
   871   00075E                     i2u27_40:
   872   00075E  502F               	movf	___awmod@divisor^0,w,c
   873   000760  5E2D               	subwf	___awmod@dividend^0,f,c
   874   000762  5030               	movf	(___awmod@divisor+1)^0,w,c
   875   000764  5A2E               	subwfb	(___awmod@dividend+1)^0,f,c
   876   000766                     i2l1042:
   877   000766  90D8               	bcf	status,0,c
   878   000768  3230               	rrcf	(___awmod@divisor+1)^0,f,c
   879   00076A  322F               	rrcf	___awmod@divisor^0,f,c
   880   00076C  2E31               	decfsz	___awmod@counter^0,f,c
   881   00076E  EFA4  F003         	goto	i2l1038
   882   000772                     i2l1046:
   883   000772  5032               	movf	___awmod@sign^0,w,c
   884   000774  B4D8               	btfsc	status,2,c
   885   000776  EFBF  F003         	goto	i2u28_41
   886   00077A  EFC1  F003         	goto	i2u28_40
   887   00077E                     i2u28_41:
   888   00077E  EFC5  F003         	goto	i2l1050
   889   000782                     i2u28_40:
   890   000782  6C2D               	negf	___awmod@dividend^0,c
   891   000784  1E2E               	comf	(___awmod@dividend+1)^0,f,c
   892   000786  B0D8               	btfsc	status,0,c
   893   000788  2A2E               	incf	(___awmod@dividend+1)^0,f,c
   894   00078A                     i2l1050:
   895   00078A  C02D  F02D         	movff	___awmod@dividend,?___awmod
   896   00078E  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
   897   000792  0012               	return		;funcret
   898   000794                     __end_of___awmod:
   899                           	callstack 0
   900                           
   901 ;; *************** function _MyusartRead *****************
   902 ;; Defined at:
   903 ;;		line 61 in file "setting_hardaware/uart.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   917 ;;      Params:         0       0       0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0
   920 ;;      Totals:         0       0       0       0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 1
   924 ;; This function calls:
   925 ;;		_UART_Write
   926 ;; This function is called by:
   927 ;;		_H_ISR
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text9
   932   000794                     __ptext9:
   933                           	callstack 0
   934   000794                     _MyusartRead:
   935                           	callstack 26
   936   000794                     
   937                           ;setting_hardaware/uart.c: 64:     if (RCREG=='\r') UART_Write('\n');
   938   000794  0E0D               	movlw	13
   939   000796  18AE               	xorwf	174,w,c	;volatile
   940   000798  A4D8               	btfss	status,2,c
   941   00079A  EFD1  F003         	goto	i2u2_41
   942   00079E  EFD3  F003         	goto	i2u2_40
   943   0007A2                     i2u2_41:
   944   0007A2  EFD6  F003         	goto	i2l900
   945   0007A6                     i2u2_40:
   946   0007A6  0E0A               	movlw	10
   947   0007A8  EC24  F004         	call	_UART_Write
   948   0007AC                     i2l900:
   949                           
   950                           ;setting_hardaware/uart.c: 65:     UART_Write(RCREG);
   951   0007AC  50AE               	movf	174,w,c	;volatile
   952   0007AE  EC24  F004         	call	_UART_Write
   953   0007B2                     
   954                           ;setting_hardaware/uart.c: 66:     if (RCREG=='!') {
   955   0007B2  0E21               	movlw	33
   956   0007B4  18AE               	xorwf	174,w,c	;volatile
   957   0007B6  A4D8               	btfss	status,2,c
   958   0007B8  EFE0  F003         	goto	i2u3_41
   959   0007BC  EFE2  F003         	goto	i2u3_40
   960   0007C0                     i2u3_41:
   961   0007C0  EFE7  F003         	goto	i2l160
   962   0007C4                     i2u3_40:
   963   0007C4                     
   964                           ;setting_hardaware/uart.c: 67:         first_press=1;
   965   0007C4  0E00               	movlw	0
   966   0007C6  6E16               	movwf	(_first_press+1)^0,c
   967   0007C8  0E01               	movlw	1
   968   0007CA  6E15               	movwf	_first_press^0,c
   969   0007CC                     
   970                           ;setting_hardaware/uart.c: 68:         LATC=-1;
   971   0007CC  688B               	setf	139,c	;volatile
   972   0007CE                     i2l160:
   973   0007CE  0012               	return		;funcret
   974   0007D0                     __end_of_MyusartRead:
   975                           	callstack 0
   976                           
   977 ;; *************** function _UART_Write *****************
   978 ;; Defined at:
   979 ;;		line 43 in file "setting_hardaware/uart.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  data            1    wreg     unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  data            1    0[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   993 ;;      Params:         0       0       0       0       0       0       0
   994 ;;      Locals:         1       0       0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0
   996 ;;      Totals:         1       0       0       0       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_MyusartRead
  1003 ;;		_H_ISR
  1004 ;;		_UART_Write_Text
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text10
  1009   000848                     __ptext10:
  1010                           	callstack 0
  1011   000848                     _UART_Write:
  1012                           	callstack 27
  1013                           
  1014                           ;incstack = 0
  1015                           ;UART_Write@data stored from wreg
  1016   000848  6E2D               	movwf	UART_Write@data^0,c
  1017   00084A                     i2l139:
  1018   00084A  A2AC               	btfss	172,1,c	;volatile
  1019   00084C  EF2A  F004         	goto	i2u1_41
  1020   000850  EF2C  F004         	goto	i2u1_40
  1021   000854                     i2u1_41:
  1022   000854  EF25  F004         	goto	i2l139
  1023   000858                     i2u1_40:
  1024   000858                     
  1025                           ;setting_hardaware/uart.c: 46:     TXREG = data;
  1026   000858  C02D  FFAD         	movff	UART_Write@data,4013	;volatile
  1027   00085C  0012               	return		;funcret
  1028   00085E                     __end_of_UART_Write:
  1029                           	callstack 0
  1030                           
  1031                           	psect	smallconst
  1032   000600                     __psmallconst:
  1033                           	callstack 0
  1034   000600  00                 	db	0
  1035   000601  00                 	db	0	; dummy byte at the end
  1036   000000                     
  1037                           	psect	rparam
  1038   000000                     
  1039                           	psect	temp
  1040   000035                     btemp:
  1041                           	callstack 0
  1042   000035                     	ds	1
  1043   000000                     int$flags	set	btemp
  1044   000000                     wtemp8	set	btemp+1
  1045   000000                     ttemp5	set	btemp+1
  1046   000000                     ttemp6	set	btemp+4
  1047   000000                     ttemp7	set	btemp+8
  1048                           
  1049                           	psect	idloc
  1050                           
  1051                           ;Config register IDLOC0 @ 0x200000
  1052                           ;	unspecified, using default values
  1053   200000                     	org	2097152
  1054   200000  FF                 	db	255
  1055                           
  1056                           ;Config register IDLOC1 @ 0x200001
  1057                           ;	unspecified, using default values
  1058   200001                     	org	2097153
  1059   200001  FF                 	db	255
  1060                           
  1061                           ;Config register IDLOC2 @ 0x200002
  1062                           ;	unspecified, using default values
  1063   200002                     	org	2097154
  1064   200002  FF                 	db	255
  1065                           
  1066                           ;Config register IDLOC3 @ 0x200003
  1067                           ;	unspecified, using default values
  1068   200003                     	org	2097155
  1069   200003  FF                 	db	255
  1070                           
  1071                           ;Config register IDLOC4 @ 0x200004
  1072                           ;	unspecified, using default values
  1073   200004                     	org	2097156
  1074   200004  FF                 	db	255
  1075                           
  1076                           ;Config register IDLOC5 @ 0x200005
  1077                           ;	unspecified, using default values
  1078   200005                     	org	2097157
  1079   200005  FF                 	db	255
  1080                           
  1081                           ;Config register IDLOC6 @ 0x200006
  1082                           ;	unspecified, using default values
  1083   200006                     	org	2097158
  1084   200006  FF                 	db	255
  1085                           
  1086                           ;Config register IDLOC7 @ 0x200007
  1087                           ;	unspecified, using default values
  1088   200007                     	org	2097159
  1089   200007  FF                 	db	255
  1090                           
  1091                           	psect	config
  1092                           
  1093                           ; Padding undefined space
  1094   300000                     	org	3145728
  1095   300000  FF                 	db	255
  1096                           
  1097                           ;Config register CONFIG1H @ 0x300001
  1098                           ;	Oscillator Selection bits
  1099                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1100                           ;	Fail-Safe Clock Monitor Enable bit
  1101                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1102                           ;	Internal/External Oscillator Switchover bit
  1103                           ;	IESO = ON, Oscillator Switchover mode enabled
  1104   300001                     	org	3145729
  1105   300001  88                 	db	136
  1106                           
  1107                           ;Config register CONFIG2L @ 0x300002
  1108                           ;	Power-up Timer Enable bit
  1109                           ;	PWRT = OFF, PWRT disabled
  1110                           ;	Brown-out Reset Enable bits
  1111                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1112                           ;	Brown Out Reset Voltage bits
  1113                           ;	BORV = 3, Minimum setting
  1114   300002                     	org	3145730
  1115   300002  1F                 	db	31
  1116                           
  1117                           ;Config register CONFIG2H @ 0x300003
  1118                           ;	Watchdog Timer Enable bit
  1119                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1120                           ;	Watchdog Timer Postscale Select bits
  1121                           ;	WDTPS = 1, 1:1
  1122   300003                     	org	3145731
  1123   300003  00                 	db	0
  1124                           
  1125                           ; Padding undefined space
  1126   300004                     	org	3145732
  1127   300004  FF                 	db	255
  1128                           
  1129                           ;Config register CONFIG3H @ 0x300005
  1130                           ;	CCP2 MUX bit
  1131                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1132                           ;	PORTB A/D Enable bit
  1133                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1134                           ;	Low-Power Timer1 Oscillator Enable bit
  1135                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1136                           ;	MCLR Pin Enable bit
  1137                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1138   300005                     	org	3145733
  1139   300005  83                 	db	131
  1140                           
  1141                           ;Config register CONFIG4L @ 0x300006
  1142                           ;	Stack Full/Underflow Reset Enable bit
  1143                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1144                           ;	Single-Supply ICSP Enable bit
  1145                           ;	LVP = OFF, Single-Supply ICSP disabled
  1146                           ;	Extended Instruction Set Enable bit
  1147                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1148                           ;	Background Debugger Enable bit
  1149                           ;	DEBUG = 0x1, unprogrammed default
  1150   300006                     	org	3145734
  1151   300006  81                 	db	129
  1152                           
  1153                           ; Padding undefined space
  1154   300007                     	org	3145735
  1155   300007  FF                 	db	255
  1156                           
  1157                           ;Config register CONFIG5L @ 0x300008
  1158                           ;	Code Protection bit
  1159                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1160                           ;	Code Protection bit
  1161                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1162                           ;	Code Protection bit
  1163                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1164                           ;	Code Protection bit
  1165                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1166   300008                     	org	3145736
  1167   300008  0F                 	db	15
  1168                           
  1169                           ;Config register CONFIG5H @ 0x300009
  1170                           ;	Boot Block Code Protection bit
  1171                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1172                           ;	Data EEPROM Code Protection bit
  1173                           ;	CPD = OFF, Data EEPROM not code-protected
  1174   300009                     	org	3145737
  1175   300009  C0                 	db	192
  1176                           
  1177                           ;Config register CONFIG6L @ 0x30000A
  1178                           ;	Write Protection bit
  1179                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1180                           ;	Write Protection bit
  1181                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1182                           ;	Write Protection bit
  1183                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1184                           ;	Write Protection bit
  1185                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1186   30000A                     	org	3145738
  1187   30000A  0F                 	db	15
  1188                           
  1189                           ;Config register CONFIG6H @ 0x30000B
  1190                           ;	Configuration Register Write Protection bit
  1191                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1192                           ;	Boot Block Write Protection bit
  1193                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1194                           ;	Data EEPROM Write Protection bit
  1195                           ;	WRTD = OFF, Data EEPROM not write-protected
  1196   30000B                     	org	3145739
  1197   30000B  E0                 	db	224
  1198                           
  1199                           ;Config register CONFIG7L @ 0x30000C
  1200                           ;	Table Read Protection bit
  1201                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1202                           ;	Table Read Protection bit
  1203                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1204                           ;	Table Read Protection bit
  1205                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1206                           ;	Table Read Protection bit
  1207                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1208   30000C                     	org	3145740
  1209   30000C  0F                 	db	15
  1210                           
  1211                           ;Config register CONFIG7H @ 0x30000D
  1212                           ;	Boot Block Table Read Protection bit
  1213                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1214   30000D                     	org	3145741
  1215   30000D  40                 	db	64
  1216                           tosu	equ	0xFFF
  1217                           tosh	equ	0xFFE
  1218                           tosl	equ	0xFFD
  1219                           stkptr	equ	0xFFC
  1220                           pclatu	equ	0xFFB
  1221                           pclath	equ	0xFFA
  1222                           pcl	equ	0xFF9
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           indf0	equ	0xFEF
  1230                           postinc0	equ	0xFEE
  1231                           postdec0	equ	0xFED
  1232                           preinc0	equ	0xFEC
  1233                           plusw0	equ	0xFEB
  1234                           fsr0h	equ	0xFEA
  1235                           fsr0l	equ	0xFE9
  1236                           wreg	equ	0xFE8
  1237                           indf1	equ	0xFE7
  1238                           postinc1	equ	0xFE6
  1239                           postdec1	equ	0xFE5
  1240                           preinc1	equ	0xFE4
  1241                           plusw1	equ	0xFE3
  1242                           fsr1h	equ	0xFE2
  1243                           fsr1l	equ	0xFE1
  1244                           bsr	equ	0xFE0
  1245                           indf2	equ	0xFDF
  1246                           postinc2	equ	0xFDE
  1247                           postdec2	equ	0xFDD
  1248                           preinc2	equ	0xFDC
  1249                           plusw2	equ	0xFDB
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8      52
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___awmod
    _MyusartRead->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _H_ISR                                                2     2      0     478
                                              6 COMRAM     2     2      0
                        _MyusartRead
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0      15
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize

 _H_ISR (ROOT)
   _MyusartRead
     _UART_Write
   _UART_Write
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      8      34       1       41.3%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFRll          B      0       0      28        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRh           7      0       0      26        0.0%
BITBIGSFRlhl         6      0       0      27        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         1      0       0      16        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      29        0.0%
DATA                 0      0      34      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 11:56:17 2023

                           l21 07FE                             l22 07FE                             l41 0846  
                           l73 086A                             l58 0876                             l92 0830  
                           l95 087E        __end_of_CCP1_Initialize 0878                            l136 07EC  
                          l850 0834                            l852 0838                            l860 0874  
                          l854 086C                            l862 085E                            l870 07DE  
                          l950 07EE                            l848 0832                            l856 086E  
                          l864 0878                            l880 07E8                            l872 07E0  
                          l952 07FA                            l858 0872                            l882 07EA  
                          l874 07E2                            l866 07D0                            l890 0824  
                          l876 07E4                            l868 07DA                            l892 0828  
                          l878 07E6                            l894 082C                            l888 081C  
                          _GIE 7F97                            _str 0001                   ___awmod@sign 0032  
                          wreg 0FE8                           _ADFM 7E07                           _CREN 7D5C  
                         _LATC 0F8B                           _RCIF 7CF5                           _TXIF 7CF4  
                         _main 07EE                           btemp 0035                           start 000E  
                 ___param_bank 0000               ?_UART_Initialize 002D  __end_of_OSCILLATOR_Initialize 0880  
                        ?_main 002D                __end_of___awmod 0794                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i2l142 085C  
                        i2l160 07CE                          i2l139 084A                          i2l172 06E0  
                        i2l419 0792                          i2l900 07AC                          i2l902 07B2  
                        i2l904 07C4                          i2l906 07CC                          i2l884 084A  
                        i2l886 0858                          i2l896 0794                          i2l898 07A6  
                        _RCREG 0FAE                          _H_ISR 0008                          _SPBRG 0FAF  
                        _TRISA 0F92                          _TRISC 0F94                          _TXREG 0FAD  
                  ?_UART_Write 002D                          ttemp5 0036                          ttemp6 0039  
                        ttemp7 003D                          status 0FD8                          wtemp8 0036  
              __initialization 0806                   __end_of_main 0806                         ??_main 0035  
             ?_CCP1_Initialize 002D                  __activetblptr 0000                         ?_H_ISR 002D  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _INT0IE 7F94                         _INT0IF 7F91                         i2l1020 06E8  
                       i2l1030 0718                         i2l1022 06F6                         i2l1040 075E  
                       i2l1032 072A                         i2l1024 06FE                         i2l1050 078A  
                       i2l1042 0766                         i2l1034 0732                         i2l1026 0702  
                       i2l1018 06E4                         i2l1044 076C                         i2l1036 073A  
                       i2l1028 0710                         i2l1060 0626                         i2l1038 0748  
                       i2l1046 0772                         i2l1070 0698                         i2l1062 062A  
                       i2l1054 0604                         i2l1048 0782                         i2l1080 06DE  
                       i2l1072 06C6                         i2l1064 0658                         i2l1056 0612  
                       i2l1074 06C8                         i2l1066 068C                         i2l1058 0620  
                       i2l1076 06CE                         i2l1068 0692                         i2l1078 06DC  
                       i2u1_40 0858                         i2u1_41 0854                         i2u2_40 07A6  
                       i2u2_41 07A2                         i2u3_40 07C4                         i2u3_41 07C0  
                    ??___awmod 0031                         _lenStr 0017                         clear_0 080C  
              ___awmod@divisor 002F                         isa$std 0001                ___awmod@counter 0031  
                 __mediumconst 0000              _SYSTEM_Initialize 081C                     __accesstop 0080  
      __end_of__initialization 0812             ?_SYSTEM_Initialize 002D                  ___rparam_used 0001  
                __end_of_H_ISR 06E4                 __pcstackCOMRAM 002D            ??_SYSTEM_Initialize 0035  
                      ??_H_ISR 0033                  ??_MyusartRead 002E      __end_of_SYSTEM_Initialize 0832  
                      _CCP1CON 0FBD                   ??_UART_Write 002D                        i2u30_40 0620  
                      i2u30_41 061C                        i2u23_40 06F6                        i2u31_40 063A  
                      i2u23_41 06F2                        i2u31_41 0634                        i2u24_40 0710  
                      i2u32_40 063C                        i2u24_41 070C                        i2u25_40 072A  
                      i2u33_40 0658                        i2u25_41 0726                        i2u33_41 0654  
                      i2u26_40 0748                        i2u34_40 066A                        i2u26_41 0744  
                      i2u34_41 0664                        i2u27_40 075E                        i2u35_40 066C  
                      i2u27_41 075A                        i2u28_40 0782                        i2u36_40 06A8  
                      i2u28_41 077E                        i2u36_41 06A2                        i2u37_40 06AA  
                      i2u29_40 0612                        i2u29_41 060E                        i2u38_40 06C6  
                      i2u38_41 06C2                        i2u39_47 06D4            __end_of_MyusartRead 07D0  
                      __Hparam 0000                        __Lparam 0000                        ___awmod 06E4  
           __end_of_UART_Write 085E                   __psmallconst 0600                        __pcinit 0806  
                      __ramtop 0600                        __ptext0 07EE                        __ptext1 081C  
                      __ptext2 07D0                        __ptext3 0878                        __ptext4 085E  
                      __ptext5 086C                        __ptext6 0832                        __ptext8 06E4  
                      __ptext9 0794          _OSCILLATOR_Initialize 0878               ___awmod@dividend 002D  
               __pintcode_body 0602           end_of_initialization 0812                        int_func 0602  
                    _RCSTAbits 0FAB                        postinc0 0FEE                 UART_Write@data 002D  
                    _TRISBbits 0F93                      _TRISCbits 0F94                    _MyusartRead 0794  
                    _TXSTAbits 0FAC   __end_of_INTERRUPT_Initialize 086C                    _BAUDCONbits 0FB8  
               _ADC_Initialize 0832         ?_OSCILLATOR_Initialize 002D            start_initialization 0806  
            ??_UART_Initialize 0035         __end_of_ADC_Initialize 0848                    __pbssCOMRAM 0001  
            ??_CCP1_Initialize 0035                      __pintcode 0008                       ?___awmod 002D  
              ?_ADC_Initialize 002D                    __smallconst 0600           _INTERRUPT_Initialize 085E  
                     _IPR1bits 0F9F                       _PIE1bits 0F9D                       _PIR1bits 0F9E  
                     _RCONbits 0FD0                     _ADCON0bits 0FC2                     _ADCON2bits 0FC0  
                 ?_MyusartRead 002D                    _INTCON2bits 0FF1          ?_INTERRUPT_Initialize 002D  
                  _first_press 0015                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0035                _UART_Initialize 07D0                       __ptext10 0848  
                     isa$xinst 0000                       int$flags 0035                       _mystring 0019  
              _CCP1_Initialize 086C         ??_INTERRUPT_Initialize 0035                       intlevel2 0000  
             ??_ADC_Initialize 0035        __end_of_UART_Initialize 07EE                     _UART_Write 0848  
